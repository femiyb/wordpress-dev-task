"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } }"use client";


var _TUVU5ERHcjs = require('./TUVU5ERH.cjs');



var _OALXXRFMcjs = require('./OALXXRFM.cjs');


var _EO6LS72Hcjs = require('./EO6LS72H.cjs');



var _AV6KTKLEcjs = require('./AV6KTKLE.cjs');

// src/form/form-store.ts
var _react = require('react');
var _formstore = require('@ariakit/core/form/form-store'); var Core = _interopRequireWildcard(_formstore);
function useFormStoreProps(store, update, props) {
  store = _TUVU5ERHcjs.useCollectionStoreProps.call(void 0, store, update, props);
  _OALXXRFMcjs.useStoreProps.call(void 0, store, props, "values", "setValues");
  _OALXXRFMcjs.useStoreProps.call(void 0, store, props, "errors", "setErrors");
  _OALXXRFMcjs.useStoreProps.call(void 0, store, props, "touched", "setTouched");
  const useValue = _react.useCallback.call(void 0, 
    (name) => store.useState(() => store.getValue(name)),
    [store]
  );
  const useValidate = _react.useCallback.call(void 0, 
    (callback) => {
      callback = _EO6LS72Hcjs.useEvent.call(void 0, callback);
      const items = store.useState("items");
      _react.useEffect.call(void 0, () => store.onValidate(callback), [items, callback]);
    },
    [store]
  );
  const useSubmit = _react.useCallback.call(void 0, 
    (callback) => {
      callback = _EO6LS72Hcjs.useEvent.call(void 0, callback);
      const items = store.useState("items");
      _react.useEffect.call(void 0, () => store.onSubmit(callback), [items, callback]);
    },
    [store]
  );
  return _react.useMemo.call(void 0, 
    () => _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, store), {
      useValue,
      useValidate,
      useSubmit
    }),
    []
  );
}
function useFormStore(props = {}) {
  const [store, update] = _OALXXRFMcjs.useStore.call(void 0, Core.createFormStore, props);
  return useFormStoreProps(store, update, props);
}




exports.useFormStoreProps = useFormStoreProps; exports.useFormStore = useFormStore;
