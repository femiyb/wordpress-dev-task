{"version":3,"names":["useRef","useLayoutEffect","useReducer","useMergeRefs","useRefEffect","useRegistry","collapseWhiteSpace","create","apply","toHTMLString","useDefaultStyle","useBoundaryStyle","useCopyHandler","useFormatBoundaries","useSelectObject","useInputAndSelection","useSelectionChangeCompat","useDelete","useRichText","value","selectionStart","selectionEnd","placeholder","onSelectionChange","preserveWhiteSpace","onChange","__unstableDisableFormats","disableFormats","__unstableIsSelected","isSelected","__unstableDependencies","__unstableAfterParse","__unstableBeforeSerialize","__unstableAddInvisibleFormats","registry","forceRender","ref","createRecord","ownerDocument","defaultView","current","selection","getSelection","range","rangeCount","getRangeAt","element","__unstableIsEditableTree","applyRecord","newRecord","domOnly","prepareEditableTree","__unstableDomOnly","_value","record","setRecordFromProps","html","formats","Array","length","replacements","start","end","hadSelectionUpdate","activeFormats","undefined","handleChange","text","batch","__unstableFormats","__unstableText","applyFromProps","didMount","activeElement","focus","mergedRefs","getValue","__experimentalRichText"],"sources":["@wordpress/rich-text/src/component/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef, useLayoutEffect, useReducer } from '@wordpress/element';\nimport { useMergeRefs, useRefEffect } from '@wordpress/compose';\nimport { useRegistry } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { collapseWhiteSpace, create } from '../create';\nimport { apply } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { useDefaultStyle } from './use-default-style';\nimport { useBoundaryStyle } from './use-boundary-style';\nimport { useCopyHandler } from './use-copy-handler';\nimport { useFormatBoundaries } from './use-format-boundaries';\nimport { useSelectObject } from './use-select-object';\nimport { useInputAndSelection } from './use-input-and-selection';\nimport { useSelectionChangeCompat } from './use-selection-change-compat';\nimport { useDelete } from './use-delete';\n\nexport function useRichText( {\n\tvalue = '',\n\tselectionStart,\n\tselectionEnd,\n\tplaceholder,\n\tonSelectionChange,\n\tpreserveWhiteSpace,\n\tonChange,\n\t__unstableDisableFormats: disableFormats,\n\t__unstableIsSelected: isSelected,\n\t__unstableDependencies = [],\n\t__unstableAfterParse,\n\t__unstableBeforeSerialize,\n\t__unstableAddInvisibleFormats,\n} ) {\n\tconst registry = useRegistry();\n\tconst [ , forceRender ] = useReducer( () => ( {} ) );\n\tconst ref = useRef();\n\n\tfunction createRecord() {\n\t\tconst {\n\t\t\townerDocument: { defaultView },\n\t\t} = ref.current;\n\t\tconst selection = defaultView.getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: ref.current,\n\t\t\trange,\n\t\t\t__unstableIsEditableTree: true,\n\t\t} );\n\t}\n\n\tfunction applyRecord( newRecord, { domOnly } = {} ) {\n\t\tapply( {\n\t\t\tvalue: newRecord,\n\t\t\tcurrent: ref.current,\n\t\t\tprepareEditableTree: __unstableAddInvisibleFormats,\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder,\n\t\t} );\n\t}\n\n\t// Internal values are updated synchronously, unlike props and state.\n\tconst _value = useRef( value );\n\tconst record = useRef();\n\n\tfunction setRecordFromProps() {\n\t\t_value.current = value;\n\t\trecord.current = create( {\n\t\t\thtml: preserveWhiteSpace ? value : collapseWhiteSpace( value ),\n\t\t} );\n\t\tif ( disableFormats ) {\n\t\t\trecord.current.formats = Array( value.length );\n\t\t\trecord.current.replacements = Array( value.length );\n\t\t}\n\t\tif ( __unstableAfterParse ) {\n\t\t\trecord.current.formats = __unstableAfterParse( record.current );\n\t\t}\n\t\trecord.current.start = selectionStart;\n\t\trecord.current.end = selectionEnd;\n\t}\n\n\tconst hadSelectionUpdate = useRef( false );\n\n\tif ( ! record.current ) {\n\t\thadSelectionUpdate.current = isSelected;\n\t\tsetRecordFromProps();\n\t} else if (\n\t\tselectionStart !== record.current.start ||\n\t\tselectionEnd !== record.current.end\n\t) {\n\t\thadSelectionUpdate.current = isSelected;\n\t\trecord.current = {\n\t\t\t...record.current,\n\t\t\tstart: selectionStart,\n\t\t\tend: selectionEnd,\n\t\t\tactiveFormats: undefined,\n\t\t};\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object} newRecord The record to sync and apply.\n\t */\n\tfunction handleChange( newRecord ) {\n\t\trecord.current = newRecord;\n\t\tapplyRecord( newRecord );\n\n\t\tif ( disableFormats ) {\n\t\t\t_value.current = newRecord.text;\n\t\t} else {\n\t\t\t_value.current = toHTMLString( {\n\t\t\t\tvalue: __unstableBeforeSerialize\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t...newRecord,\n\t\t\t\t\t\t\tformats: __unstableBeforeSerialize( newRecord ),\n\t\t\t\t\t  }\n\t\t\t\t\t: newRecord,\n\t\t\t} );\n\t\t}\n\n\t\tconst { start, end, formats, text } = newRecord;\n\n\t\t// Selection must be updated first, so it is recorded in history when\n\t\t// the content change happens.\n\t\t// We batch both calls to only attempt to rerender once.\n\t\tregistry.batch( () => {\n\t\t\tonSelectionChange( start, end );\n\t\t\tonChange( _value.current, {\n\t\t\t\t__unstableFormats: formats,\n\t\t\t\t__unstableText: text,\n\t\t\t} );\n\t\t} );\n\t\tforceRender();\n\t}\n\n\tfunction applyFromProps() {\n\t\tsetRecordFromProps();\n\t\tapplyRecord( record.current );\n\t}\n\n\tconst didMount = useRef( false );\n\n\t// Value updates must happen synchonously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( didMount.current && value !== _value.current ) {\n\t\t\tapplyFromProps();\n\t\t\tforceRender();\n\t\t}\n\t}, [ value ] );\n\n\t// Value updates must happen synchonously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( ! hadSelectionUpdate.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ref.current.ownerDocument.activeElement !== ref.current ) {\n\t\t\tref.current.focus();\n\t\t}\n\n\t\tapplyRecord( record.current );\n\t\thadSelectionUpdate.current = false;\n\t}, [ hadSelectionUpdate.current ] );\n\n\tconst mergedRefs = useMergeRefs( [\n\t\tref,\n\t\tuseDefaultStyle(),\n\t\tuseBoundaryStyle( { record } ),\n\t\tuseCopyHandler( { record } ),\n\t\tuseSelectObject(),\n\t\tuseFormatBoundaries( { record, applyRecord } ),\n\t\tuseDelete( {\n\t\t\tcreateRecord,\n\t\t\thandleChange,\n\t\t} ),\n\t\tuseInputAndSelection( {\n\t\t\trecord,\n\t\t\tapplyRecord,\n\t\t\tcreateRecord,\n\t\t\thandleChange,\n\t\t\tisSelected,\n\t\t\tonSelectionChange,\n\t\t} ),\n\t\tuseSelectionChangeCompat(),\n\t\tuseRefEffect( () => {\n\t\t\tapplyFromProps();\n\t\t\tdidMount.current = true;\n\t\t}, [ placeholder, ...__unstableDependencies ] ),\n\t] );\n\n\treturn {\n\t\tvalue: record.current,\n\t\t// A function to get the most recent value so event handlers in\n\t\t// useRichText implementations have access to it. For example when\n\t\t// listening to input events, we internally update the state, but this\n\t\t// state is not yet available to the input event handler because React\n\t\t// may re-render asynchronously.\n\t\tgetValue: () => record.current,\n\t\tonChange: handleChange,\n\t\tref: mergedRefs,\n\t};\n}\n\nexport default function __experimentalRichText() {}\n"],"mappings":"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"}